{
	"compiler": {
		"version": "0.8.4+commit.c7e474f2"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "_biddingTime",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "_revealTime",
						"type": "uint256"
					},
					{
						"internalType": "address payable",
						"name": "_beneficiary",
						"type": "address"
					}
				],
				"stateMutability": "nonpayable",
				"type": "constructor"
			},
			{
				"inputs": [],
				"name": "AuctionEndAlreadyCalled",
				"type": "error"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "time",
						"type": "uint256"
					}
				],
				"name": "TooEarly",
				"type": "error"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "time",
						"type": "uint256"
					}
				],
				"name": "TooLate",
				"type": "error"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "address",
						"name": "winner",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "highestBid",
						"type": "uint256"
					}
				],
				"name": "AuctionEnded",
				"type": "event"
			},
			{
				"inputs": [],
				"name": "auctionEnd",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "beneficiary",
				"outputs": [
					{
						"internalType": "address payable",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bytes32",
						"name": "_blindedBid",
						"type": "bytes32"
					}
				],
				"name": "bid",
				"outputs": [],
				"stateMutability": "payable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "biddingEnd",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"name": "bids",
				"outputs": [
					{
						"internalType": "bytes32",
						"name": "blindedBid",
						"type": "bytes32"
					},
					{
						"internalType": "uint256",
						"name": "deposit",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "ended",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "highestBid",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "highestBidder",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256[]",
						"name": "_values",
						"type": "uint256[]"
					},
					{
						"internalType": "bool[]",
						"name": "_fake",
						"type": "bool[]"
					},
					{
						"internalType": "bytes32[]",
						"name": "_secret",
						"type": "bytes32[]"
					}
				],
				"name": "reveal",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "revealEnd",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "withdraw",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			}
		],
		"devdoc": {
			"kind": "dev",
			"methods": {},
			"version": 1
		},
		"userdoc": {
			"errors": {
				"AuctionEndAlreadyCalled()": [
					{
						"notice": "The function auctionEnd has already been called."
					}
				],
				"TooEarly(uint256)": [
					{
						"notice": "The function has been called too early. Try again at `time`."
					}
				],
				"TooLate(uint256)": [
					{
						"notice": "The function has been called too late. It cannot be called after `time`."
					}
				]
			},
			"kind": "user",
			"methods": {
				"auctionEnd()": {
					"notice": "End the auction and send the highest bid to the beneficiary."
				},
				"bid(bytes32)": {
					"notice": "Place a blinded bid with `_blindedBid` = keccak256(abi.encodePacked(value, fake, secret)). The sent ether is only refunded if the bid is correctly revealed in the revealing phase. The bid is valid if the ether sent together with the bid is at least \"value\" and \"fake\" is not true. Setting \"fake\" to true and sending not the exact amount are ways to hide the real bid but still make the required deposit. The same address can place multiple bids."
				},
				"reveal(uint256[],bool[],bytes32[])": {
					"notice": "Reveal your blinded bids. You will get a refund for all correctly blinded invalid bids and for all bids except for the totally highest."
				},
				"withdraw()": {
					"notice": "Withdraw a bid that was overbid."
				}
			},
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"solidity codes/blind_auction1.sol": "BlindAuction"
		},
		"evmVersion": "istanbul",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": false,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"solidity codes/blind_auction1.sol": {
			"keccak256": "0x204f7b29025de7ea147d9d2a8426dedc81cbc8b138e4f043237d2d519599002e",
			"license": "GPL-3.0",
			"urls": [
				"bzz-raw://cad6786f7eb64125590eac7b4ca76be5b9941edf78f80c39eb6dddf393d57b82",
				"dweb:/ipfs/Qmb5mzhe4hWf6phALcv8ZkVrB7Xumfai22dDA5diCGMeEV"
			]
		}
	},
	"version": 1
}