{
	"compiler": {
		"version": "0.8.4+commit.c7e474f2"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "_biddingTime",
						"type": "uint256"
					},
					{
						"internalType": "address payable",
						"name": "_beneficiary",
						"type": "address"
					}
				],
				"stateMutability": "nonpayable",
				"type": "constructor"
			},
			{
				"inputs": [],
				"name": "AuctionAlreadyEnded",
				"type": "error"
			},
			{
				"inputs": [],
				"name": "AuctionEndAlreadyCalled",
				"type": "error"
			},
			{
				"inputs": [],
				"name": "AuctionNotYetEnded",
				"type": "error"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "highestBid",
						"type": "uint256"
					}
				],
				"name": "BidNotHighEnough",
				"type": "error"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "address",
						"name": "winner",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					}
				],
				"name": "AuctionEnded",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "address",
						"name": "bidder",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					}
				],
				"name": "HighestBidIncreased",
				"type": "event"
			},
			{
				"inputs": [],
				"name": "auctionEnd",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "auctionEndTime",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "beneficiary",
				"outputs": [
					{
						"internalType": "address payable",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "bid",
				"outputs": [],
				"stateMutability": "payable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "highestBid",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "highestBidder",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "withdraw",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			}
		],
		"devdoc": {
			"kind": "dev",
			"methods": {},
			"version": 1
		},
		"userdoc": {
			"errors": {
				"AuctionAlreadyEnded()": [
					{
						"notice": "The auction has already ended."
					}
				],
				"AuctionEndAlreadyCalled()": [
					{
						"notice": "The function auctionEnd has already been called."
					}
				],
				"AuctionNotYetEnded()": [
					{
						"notice": "The auction has not ended yet."
					}
				],
				"BidNotHighEnough(uint256)": [
					{
						"notice": "There is already a higher or equal bid."
					}
				]
			},
			"kind": "user",
			"methods": {
				"auctionEnd()": {
					"notice": "End the auction and send the highest bid to the beneficiary."
				},
				"bid()": {
					"notice": "Bid on the auction with the value sent together with this transaction. The value will only be refunded if the auction is not won."
				},
				"constructor": {
					"notice": "Create a simple auction with `_biddingTime` seconds bidding time on behalf of the beneficiary address `_beneficiary`."
				},
				"withdraw()": {
					"notice": "Withdraw a bid that was overbid."
				}
			},
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"solidity codes/open_auction.sol": "SimpleAuction"
		},
		"evmVersion": "istanbul",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": false,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"solidity codes/open_auction.sol": {
			"keccak256": "0xc20ea8382c416debd31e7b18fdd37e75c2852b3a8d47e638dae4dbba35541d6f",
			"license": "GPL-3.0",
			"urls": [
				"bzz-raw://98e2824206250eaf9fe7079fbd2f0195b0bbc61ac16b6ed421be88db1ac34983",
				"dweb:/ipfs/QmTJqHMsSjQ6V7Eq34T2CzBAV8YsL8CAox5RpeXYyvhN23"
			]
		}
	},
	"version": 1
}